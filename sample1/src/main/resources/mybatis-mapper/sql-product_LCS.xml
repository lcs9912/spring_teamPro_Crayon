<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.sample1.mapper.ProductLcsMapper">
	<!-- 상품등록 -->
	<insert id="insertProduct" parameterType="hashmap">
		INSERT INTO T1_PRODUCT_UPDATE
			(PRODUCT_MODEL, PRODUCT_NAME, PRODUCT_SIZE, PRODUCT_PRICE, PRODUCT_COLOR,
				PRODUCT_LAUNCH_PRICE, PRODUCT_CATEGORIE1, PRODUCT_CATEGORIE2,PRODUCT_BRAND)
		VALUES
			(#{pModel}, #{pName}, #{pSize}, #{pPrice}, #{pColor}, #{launch}, #{pCategorie1}, #{pCategorie2}, #{brand})
	</insert>
	
	<!-- 상품이미지 업로드 -->
	<insert id="insertProductImg" parameterType="hashmap">
		INSERT INTO T1_PRODUCT_IMG(PRODUCT_NAME, PRODUCT_IMG1, PRODUCT_IMG2, PRODUCT_IMG3)
		VALUES
			(#{pName}, #{path1}, #{path2}, #{path3})
	</insert>
	
	<!-- 브랜드 조회 -->
	<select id="selectBrand" resultType="com.example.sample1.model.ProductLcs">
		SELECT *
		FROM T1_PRODUCT_BRAND
	</select>
	
	<!-- 브랜드 이름 직접입력 -->
	<insert id="insertBrand" parameterType="hashmap">
		INSERT INTO T1_PRODUCT_BRAND(BRAND_NAME)
		VALUES (#{brandName})
	</insert><!-- 여기까지 지우면 됨 -->
	
	<!-- 상품 상세정보 -->
	<select id="selectProductInfo" parameterType="hashmap"
		resultType="com.example.sample1.model.ProductLcs">
		SELECT * FROM T1_PRODUCT_UPDATE U 
		INNER JOIN T1_PRODUCT_BRAND B
		ON U.PRODUCT_BRAND = B.PRODUCT_BRAND
		WHERE U.PRODUCT_SELL_NUMBER = #{proNum}	
	</select>
	
	<!-- 즉시  판매가 -->
	<select id="selectSellMinPrice" parameterType="hashmap"
		resultType="com.example.sample1.model.ProductLcs">
		SELECT MIN(PRODUCT_PRICE) AS SELLMINPRICE
		FROM T1_PRODUCT_UPDATE 
		WHERE PRODUCT_MODEL = #{modelNum} AND SELLBUY = 'B'
	</select>
	
	<!-- 즉시 구매가 -->
	<select id="selectBuyMinPrice" parameterType="hashmap"
		resultType="com.example.sample1.model.ProductLcs">
		SELECT MIN(PRODUCT_PRICE) AS BUYMINPRICE
		FROM T1_PRODUCT_UPDATE 
		WHERE PRODUCT_MODEL = #{modelNum} AND SELLBUY = 'S'
	</select>
	
	<select id="selectRecentTransaction" parameterType="hashmap"
		resultType="com.example.sample1.model.ProductLcs">
		SELECT TRANSACTION_PRICE, MAX(TRANSACTION_DATE) AS RECENTTRANSACTION
		FROM T1_TRANSACTION 
		WHERE PRODUCT_SELL_NUMBER = #{proNum}
		GROUP BY TRANSACTION_PRICE
	</select>
	
	<!-- 관심상품 조회 -->
	<select id="selectInterest" parameterType="hashmap"
		resultType="com.example.sample1.model.ProductLcs">
		SELECT * 
		FROM T1_PRODUCT_LIKE
		WHERE USER_ID = #{uId} AND PRODUCT_SELL_NUMBER = #{proNum}
	</select>
	
	<!-- 관심상품 등록 -->
	<insert id="insertInterest" parameterType="hashmap">
		INSERT INTO T1_PRODUCT_LIKE
		VALUES (#{proNum},#{uId}, '유니크', NOW())
	</insert>
	
	<!-- 관심상품 해제 -->
	<delete id="deleteInterest" parameterType="hashmap">
		DELETE FROM T1_PRODUCT_LIKE
		WHERE USER_ID = #{uId} AND PRODUCT_SELL_NUMBER = #{proNum}
	</delete>
	
	<!-- 상품 테이블 관심 cnt + 1 -->
	<update id="plusInterestCnt" parameterType="hashmap">
		UPDATE T1_PRODUCT_UPDATE
			SET PRODUCT_INTEREST = PRODUCT_INTEREST + 1
		WHERE PRODUCT_SELL_NUMBER = #{proNum}	
	</update>
	
	<!-- 상품 테이블 관심 cnt - 1 -->
	<update id="minusdateInterestCnt" parameterType="hashmap">
		UPDATE T1_PRODUCT_UPDATE
			SET PRODUCT_INTEREST = PRODUCT_INTEREST - 1
		WHERE PRODUCT_SELL_NUMBER = #{proNum}	
	</update>
	
</mapper>