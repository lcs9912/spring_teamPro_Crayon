<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.sample1.mapper.UserMapper">
	<!-- 회원가입 -->
	<insert id="insert" parameterType="hashmap">
		INSERT INTO T1_USER_TBL (USER_ID, USER_PWD, USER_NAME, USER_EMAIL, USER_PHONE, USER_GENDER, PWD_HINT, PWD_ANSWER, USER_JOINDATE, USER_UPDATE)
		VALUES (#{userId}, #{userPwd1}, #{userName}, 
			#{userEmail}, #{userPhone}, #{userGender}, 
			#{userPwdHint}, #{userPwdAnswer}, NOW(), NOW())
	</insert>
	
	<!-- 로그인 아이디 비번 조회 -->
	<select id="selectUserLoginAllCheck" parameterType="hashmap"
		resultType="com.example.sample1.model.User">
			SELECT *
			FROM T1_USER_TBL
			WHERE USER_ID = #{uId} AND USER_PWD = #{pwd}
	</select>
	
	<!-- 로그인 아이디 조회 (중복체크)-->
	<select id="selectUserLoginIdCheck" parameterType="hashmap"
		resultType="com.example.sample1.model.User">
			SELECT *
			FROM T1_USER_TBL
			WHERE USER_ID = #{uId}
	</select>
	
	<!-- 이메일, 비번, 전화번호 마스킹 -->
	<select id="selectMaskedinfo" parameterType="hashmap"
		resultType="com.example.sample1.model.User">
    	SELECT
         	CONCAT(
            	SUBSTRING(USER_EMAIL, 1, 1),
            	REPEAT('*', LOCATE('@', USER_EMAIL) - 2),
            	SUBSTRING(USER_EMAIL, LOCATE('@', USER_EMAIL)-1)
        	) AS MASKED_EMAIL,
       		CONCAT(REPEAT('*', LENGTH(USER_PWD))) AS MASKED_PWD,
         	CONCAT(
        	SUBSTRING(USER_PHONE, 1, 3),
        	'-',
        	SUBSTRING(USER_PHONE, 5, 1),
        	REPEAT('*', 3),
        	'-',
        	SUBSTRING(USER_PHONE, 8, 4)
    	) AS MASKED_PHONE
    FROM T1_USER_TBL
    WHERE USER_ID = #{uId}
	</select>

	<!-- 힌트 확인 -->
	<select id="selectPwdHintAnswer" resultType="int">
		SELECT COUNT(*)
		FROM T1_USER_TBL
		WHERE USER_ID = #{uId} AND PWD_HINT = #{pwdHint} AND PWD_ANSWER = #{answer}
	</select>
	
	<!-- 이메일 아이디 비밀번호 확인 -->
	<select id="selectEmailIdPwd" resultType="int">
		SELECT COUNT(*)
		FROM T1_USER_TBL
		WHERE USER_ID = #{uId} AND USER_PWD = #{pwd} AND USER_EMAIL = #{editEmail}
	</select>	
	
	
	<!-- 로그인 횟수 + 1 -->
	<update id="updateUserLoginCnt" parameterType="hashmap" > 
   			UPDATE T1_USER_TBL
				SET USER_LOGIN_CNT = USER_LOGIN_CNT+1
			WHERE USER_ID = #{uId} 
   </update>
   
   
   <!-- 로그인 성공시 횟수 초기화 -->
   <update id="updateUserLoginCntReset" parameterType="hashmap"> 
   	 		UPDATE T1_USER_TBL
				SET USER_LOGIN_CNT = 0
			WHERE USER_ID = #{uId} 
   </update>
   
   <!-- 마이페이지 로그인 정보 변경 -->
   <update id="updateUserLoginInfo" parameterType="hashmap">
  			UPDATE T1_USER_TBL
  			SET
  			<if test="editEmail != '' and editEmail != null">
				USER_EMAIL = #{editEmail}
			</if>
			<if test="editPhone != '' and editPhone != null">
				USER_PHONE = #{editPhone}
			</if>
			<if test="editPwd != '' and editPwd != null">
				USER_PWD = #{editPwd}
			</if>
			<if test="editSize != '' and editSize != null">
				USER_SIZE = #{editSize}
			</if>
			<if test="editReMessage != '' and editReMessage != null">
				RECEIVE_MESSAGE = #{editReMessage}
			</if>
			<if test="editReEmail != '' and editReEmail != null">
				RECEIVE_EMAIL = #{editReEmail}
			</if>
			WHERE USER_ID = #{uId}
   </update>
   
   <!-- 회원 탈퇴 처리 -->
   <update id="updateUserInfoRemove" parameterType="hashmap">
   			UPDATE T1_USER_TBL
   			SET
   				USER_BANYN = 'Y'
   			WHERE USER_ID= #{uId}
   </update>
   
   <!-- POINT_TBL포인트 입력 -->
   
</mapper>
